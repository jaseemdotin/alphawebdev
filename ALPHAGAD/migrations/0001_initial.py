# Generated by Django 3.1.5 on 2021-02-02 05:40

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='alpha_category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('catname', models.CharField(max_length=25)),
                ('cdis', models.CharField(max_length=30, unique=True)),
                ('catimage', models.ImageField(blank=True, null=True, upload_to='product/image')),
            ],
        ),
        migrations.CreateModel(
            name='alphaproducts1',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('productname', models.CharField(max_length=40)),
                ('pimage1', models.ImageField(blank=True, default='def_img.png', null=True, upload_to='product/image')),
                ('pimage2', models.ImageField(blank=True, default='def_img.png', null=True, upload_to='product/image')),
                ('pimage3', models.ImageField(blank=True, default='def_img.png', null=True, upload_to='product/image')),
                ('prize', models.IntegerField()),
                ('sell', models.IntegerField()),
                ('discount', models.IntegerField()),
                ('brand', models.CharField(max_length=25)),
                ('pdisc', models.CharField(max_length=50)),
                ('spec_status', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='alpha_signup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('firstname', models.CharField(max_length=30)),
                ('lastname', models.CharField(max_length=30)),
                ('city', models.CharField(max_length=30)),
                ('pincode', models.IntegerField(null=True)),
                ('email', models.EmailField(max_length=30)),
                ('phonenumber', models.IntegerField(null=True)),
                ('astatus', models.IntegerField(default=0)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ramspec',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ramtype', models.CharField(max_length=20)),
                ('ramsize', models.IntegerField()),
                ('ptotal', models.IntegerField()),
                ('productid', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='ALPHAGAD.alphaproducts1')),
            ],
        ),
        migrations.CreateModel(
            name='lapspec',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ramdisc', models.CharField(max_length=30)),
                ('ramsize', models.IntegerField()),
                ('graphicsdisc', models.CharField(max_length=30)),
                ('graphicssize', models.IntegerField()),
                ('screensize', models.CharField(max_length=30)),
                ('motherboard', models.CharField(max_length=30)),
                ('hdd', models.IntegerField()),
                ('sdd', models.IntegerField()),
                ('systemos', models.CharField(max_length=30)),
                ('processor', models.CharField(max_length=30)),
                ('ptotal', models.IntegerField()),
                ('producid', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='ALPHAGAD.alphaproducts1')),
            ],
        ),
        migrations.CreateModel(
            name='cameraspec',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('camresalution', models.CharField(max_length=30)),
                ('camtype', models.IntegerField()),
                ('ptotal', models.IntegerField()),
                ('productid', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='ALPHAGAD.alphaproducts1')),
            ],
        ),
        migrations.AddField(
            model_name='alphaproducts1',
            name='Userid',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='alphaproducts1',
            name='catname',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='ALPHAGAD.alpha_category'),
        ),
    ]
